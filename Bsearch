// #include<stdio.h>
// #include<limits.h>
// int Bsearch(){
//     int arr[6]={1,2,3,4,5,6};
//     int target=4;
//     int s=0;
//     int end=5;
     
//     while(s<=end){
//         int mid=(s+end)/2;
//     if(arr[mid]==target){
//         return mid;
//     }
//     else if(arr[mid]<target){
//         s=mid+1;
//     }
//     else{
//         end=mid-1;
//     }
// }
//     return -1;
// }
// int main(){
// 	int data= Bsearch();
// 	printf("%d",data);

// }


// #include<stdio.h>
// #include<limits.h>
// int maxarraysum(int arr[],int n,int k){
//     intwsum=0;
//     int arr[7]={-1,2,4,5,4,3,7};
//     for(int i=0;i<k;i++){
//         wsum=wsum+arr[i];

//     }
//     int maxsum=wsum;
//     for(int j=k;i<n;j++){
//         wsum=wsum+arr[j]-arr[j-k];
//         if(wsum>maxsum){
//             maxsum=wsum;
//         }
//     }
// return maxsum;
// }

// #include<stdio.h>
// #include<limits.h>
// int maxsum=INT_MIN;
// int arr[7]={-1,2,4,5,-4,3,-7};
// for(int i=0;i<=n-k;i++){
//     int currsum=0;
//     for(int j=i;j<i+k;j++){
//         currsum=currsum+arr[j];

//     }
//     if(curr>maxsum){
//         maxsum=currsum;
//     }
// }
// return maxsum;
// }

#include<stdio.h>
#include<limits.h>
int main(){
    int arr[7]={-1,2,4,5,4,3,7};
    int k=3;
    int n=sizeof(arr)/sizeofarr[0];
    int data=maxArraysum(arr,n,k);
    printf("%d",data);
}